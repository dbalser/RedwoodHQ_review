<?xml version="1.0" encoding="UTF-8"?>
<project name="csp-automation" default="all">
  
  
  <property file="project-build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Global Libraries -->
  <!-- Register Custom Compiler Taskdefs -->
  <target name="register.custom.compilers">
    <property name="grooovyc.task.sdk" value="library.external_libraries.classpath"/>
    <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="${grooovyc.task.sdk}"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module CloudSuitePortal -->
  
  <dirname property="module.cloudsuiteportal.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.cloudsuiteportal" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.cloudsuiteportal" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.cloudsuiteportal" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.cloudsuiteportal" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="cloudsuiteportal.output.dir" value="${module.cloudsuiteportal.basedir}/../framework/build/classes"/>
  <property name="cloudsuiteportal.testoutput.dir" value="${module.cloudsuiteportal.basedir}/../framework/build/test"/>
  
  <path id="cloudsuiteportal.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="cloudsuiteportal.module.production.classpath">
    <path refid="${module.jdk.classpath.cloudsuiteportal}"/>
    <fileset dir="${basedir}/build/jar">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="cloudsuiteportal.runtime.production.module.classpath">
    <pathelement location="${cloudsuiteportal.output.dir}"/>
  </path>
  
  <path id="cloudsuiteportal.module.classpath">
    <path refid="${module.jdk.classpath.cloudsuiteportal}"/>
    <pathelement location="${cloudsuiteportal.output.dir}"/>
    <fileset dir="${basedir}/build/jar">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="cloudsuiteportal.runtime.module.classpath">
    <pathelement location="${cloudsuiteportal.testoutput.dir}"/>
    <pathelement location="${cloudsuiteportal.output.dir}"/>
    <fileset dir="${basedir}/build/jar">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  
  <patternset id="excluded.from.module.cloudsuiteportal">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.cloudsuiteportal">
    <patternset refid="excluded.from.module.cloudsuiteportal"/>
  </patternset>
  
  <path id="cloudsuiteportal.module.sourcepath">
    <dirset dir="${module.cloudsuiteportal.basedir}/../framework">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.cloudsuiteportal" depends="compile.module.cloudsuiteportal.production,compile.module.cloudsuiteportal.tests" description="Compile module CloudSuitePortal"/>
  
  <target name="compile.module.cloudsuiteportal.production" description="Compile module CloudSuitePortal; production classes">
    <mkdir dir="${cloudsuiteportal.output.dir}"/>
    <javac destdir="${cloudsuiteportal.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.cloudsuiteportal}/javac">
      <compilerarg line="${compiler.args.cloudsuiteportal}"/>
      <bootclasspath refid="cloudsuiteportal.module.bootclasspath"/>
      <classpath refid="cloudsuiteportal.module.production.classpath"/>
      <src refid="cloudsuiteportal.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.cloudsuiteportal"/>
    </javac>
    
    <copy todir="${cloudsuiteportal.output.dir}">
      <fileset dir="${module.cloudsuiteportal.basedir}/../framework/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.cloudsuiteportal.tests" depends="compile.module.cloudsuiteportal.production" description="compile module CloudSuitePortal; test classes" unless="skip.tests"/>
  
  <target name="clean.module.cloudsuiteportal" description="cleanup module">
    <delete dir="${cloudsuiteportal.output.dir}"/>
    <delete dir="${cloudsuiteportal.testoutput.dir}"/>
  </target>
  
  
  <!-- Module RedwoodHQ -->
  
  <dirname property="module.redwoodhq.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.redwoodhq" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.redwoodhq" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.redwoodhq" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.redwoodhq" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="redwoodhq.output.dir" value="${module.redwoodhq.basedir}/build/classes"/>
  <property name="redwoodhq.testoutput.dir" value="${module.redwoodhq.basedir}/build/test"/>
  
  <path id="redwoodhq.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="redwoodhq.module.production.classpath">
    <path refid="${module.jdk.classpath.redwoodhq}"/>
    <fileset dir="${basedir}/External Libraries">
      <patternset refid="library.patterns"/>
    </fileset>
    <fileset dir="${basedir}/build/jar">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="redwoodhq.runtime.production.module.classpath">
    <pathelement location="${redwoodhq.output.dir}"/>
  </path>
  
  <path id="redwoodhq.module.classpath">
    <path refid="${module.jdk.classpath.redwoodhq}"/>
    <pathelement location="${redwoodhq.output.dir}"/>
    <fileset dir="${basedir}/External Libraries">
      <patternset refid="library.patterns"/>
    </fileset>
    <fileset dir="${basedir}/build/jar">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="redwoodhq.runtime.module.classpath">
    <pathelement location="${redwoodhq.testoutput.dir}"/>
    <pathelement location="${redwoodhq.output.dir}"/>
    <fileset dir="${basedir}/External Libraries">
      <patternset refid="library.patterns"/>
    </fileset>
    <fileset dir="${basedir}/build/jar">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  
  <patternset id="excluded.from.module.redwoodhq">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.redwoodhq">
    <patternset refid="excluded.from.module.redwoodhq"/>
  </patternset>
  
  <path id="redwoodhq.module.sourcepath">
    <dirset dir="${module.redwoodhq.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.redwoodhq" depends="compile.module.redwoodhq.production,compile.module.redwoodhq.tests" description="Compile module RedwoodHQ"/>
  
  <target name="compile.module.redwoodhq.production" depends="register.custom.compilers" description="Compile module RedwoodHQ; production classes">
    <mkdir dir="${redwoodhq.output.dir}"/>
    <groovyc destdir="${redwoodhq.output.dir}" fork="yes">
      <src refid="redwoodhq.module.sourcepath"/>
      <classpath refid="redwoodhq.module.production.classpath"/>
      <patternset refid="excluded.from.compilation.redwoodhq"/>
      <javac debug="${compiler.debug}">
        <compilerarg line="${compiler.args.redwoodhq}"/>
      </javac>
    </groovyc>
    
    <copy todir="${redwoodhq.output.dir}">
      <fileset dir="${module.redwoodhq.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.redwoodhq.tests" depends="register.custom.compilers,compile.module.redwoodhq.production" description="compile module RedwoodHQ; test classes" unless="skip.tests"/>
  
  <target name="clean.module.redwoodhq" description="cleanup module">
    <delete dir="${redwoodhq.output.dir}"/>
    <delete dir="${redwoodhq.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.cloudsuiteportal, clean.module.redwoodhq, clean.artifact.cloudsuiteportal:jar" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.cloudsuiteportal, compile.module.redwoodhq" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.cloudsuiteportal:jar" value="${basedir}/External Libraries"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.CloudSuitePortal.jar" value="${artifacts.temp.dir}/CloudSuitePortal.jar"/>
  </target>
  
  <target name="clean.artifact.cloudsuiteportal:jar" description="clean CloudSuitePortal:jar artifact output">
    <delete dir="${artifact.output.cloudsuiteportal:jar}"/>
  </target>
  
  <target name="artifact.cloudsuiteportal:jar" depends="init.artifacts, compile.module.cloudsuiteportal" description="Build &#39;CloudSuitePortal:jar&#39; artifact">
    <mkdir dir="${artifact.output.cloudsuiteportal:jar}"/>
    <jar destfile="${temp.jar.path.CloudSuitePortal.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset file="${basedir}/../framework/META-INF/MANIFEST.MF" prefix="META-INF"/>
      <zipfileset dir="${cloudsuiteportal.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.CloudSuitePortal.jar}" tofile="${artifact.output.cloudsuiteportal:jar}/CloudSuitePortal.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.cloudsuiteportal:jar" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>